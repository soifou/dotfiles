" Reset all previous settings
sanitize tridactyllocal tridactylsync

" Settings {{{

" Sourcing several files is quite slow
" source_quiet ~/.config/tridactyl/foo

" Use my startpage on new tabs
" set newtab file:///home/user/startpage/index.html

set hintchars asdfghjklqwertpoiuyzxcvb/.,mn
set hintuppercase false

" Custom theme
colorscheme base16

" Disable indicator in normal mode
" set modeindicatormodes {"normal":"false","insert":"true","input":"true","ignore":"true","ex":"true","hint":"true","visual":"true"}
set modeindicatorshowkeys true
" }}}

" Autocommands {{{
" Prevent website from stealing focus
" set allowautofocus false
autocmd TabEnter .* unfocus

" Skip 'home' page for youtube channel and go straight to 'video'
autocmd DocStart .*youtube\.com/(c|channel|user)/[^/]*/?$ urlmodify -g 2 videos
autocmd UriChange .*youtube\.com js window.location.href.match(".*youtube\.com/(c|channel|user)/[^/]*/?$") && tri.excmds.urlmodify("-g", "2", "videos")

" Increase automatically zoom level for some websites
" Note this can be annoying when restoring a Firefox session
" with numerous pinned tabs, causing back and forth zoom level
" on the current one.
" Adding theses Firefox prefs disable reload of previous tabs:
"   browser.sessionstore.restore_on_demand => true
"   browser.sessionstore.restore_pinned_tabs_on_demand => true

autocmd DocStart .* zoom 120

" autocmd DocStart .*archlinux\.org.* zoom 120
" autocmd DocStart .*duckduckgo\.com.* zoom 120
" autocmd DocStart .*github\.com.* zoom 120
" autocmd DocStart .*gitlab\.com.* zoom 120
" autocmd DocStart .*wikipedia\.org.* zoom 120
" autocmd DocStart .stackoverflow\.com.* zoom 120

" Front-end alternatives (disabled - use more convenient ff extension https://libredirect.github.io)
" autocmd DocStart ^http(s?)://www\.youtube\.com urlmodify -t www.youtube.com yewtu.be
" }}}

" Containers {{{
autocontain -s google\.(fr|com) google
autocontain -s youtube\.com google
autocontain -s amazon\.(fr|com) amazon
" }}}

" Quickmark {{{
" Use go<key>/gn<key>/gw<key> to open quickmark for <key>
" in (o) current / (n) new / (w) window
" quickmark g https://github.com/
" }}}

" Blacklist {{{
blacklistadd calendar.google.com
blacklistadd docs.google.com
blacklistadd drive.google.com
blacklistadd mail.google.com
blacklistadd monkeytype.com
blacklistadd typingclub.com
" }}}

" Alias {{{

alias db open http://db.test
alias mail open http://mail.test
alias cups open http://127.0.0.1:631/
alias syncthing open http://127.0.0.1:8384/

alias viewarchive js tri.excmds.open("https://web.archive.org/*/" + window.location.href)

" }}}

" Searchurls {{{

" Disable all built-in searchurls
" jsb Object.keys(tri.config.get("searchurls")).forEach(u => tri.config.set("searchurls", u, '""'))

" Set DuckDuckGo as default search engine
" ie: o tridactyl will show results from duckduckgo
set searchengine duckduckgo

" Enhance search
" ie. search tridactyl on github: o gh tridactyl
set searchurls.amazon https://www.amazon.fr/s/ref=nb_sb_noss?field-keywords=%s
set searchurls.arch https://wiki.archlinux.org/index.php?search=%s&title=Special%3ASearch&go=Go
set searchurls.gh https://github.com/search?utf8=%E2%9C%93&q=%s&ref=simplesearch&type=code
set searchurls.gr https://github.com/search?utf8=%E2%9C%93&q=%s&ref=simplesearch&type=repositories
set searchurls.gi https://github.com/search?utf8=%E2%9C%93&q=%s&ref=simplesearch&type=issues
set searchurls.gist https://gist.github.com/search?q=%s
set searchurls.maps https://www.google.com/maps/search/%s
set searchurls.imdb https://www.imdb.com/find?q=%s
set searchurls.mdn https://developer.mozilla.org/en-US/search?q=%s&topic=api&topic=js
set searchurls.npm https://www.npmjs.com/search?q=%s
set searchurls.tre https://www.wordreference.com/redirect/translation.aspx?w=%s&dict=enfr
set searchurls.trf https://www.wordreference.com/redirect/translation.aspx?w=%s&dict=fren
set searchurls.w https://en.wikipedia.org/w/index.php?search=%s&title=Special%3ASearch
set searchurls.wfr https://fr.wikipedia.org/w/index.php?search=%s&title=Sp%E9cial%3ARecherche
set searchurls.y https://yewtu.be/results?search_query=%s
set searchurls.yi https://piped.privacydev.net/results?search_query=%s
set searchurls.rp https://teddit.artemislena.eu/r/all/search?q=%s
" }}}

" Keybinds {{{

" Defaults: https://github.com/tridactyl/tridactyl/blob/master/src/lib/config.ts
" <C-w> is used below although it is a Firefox builtin keybind. It is disabled
" using autoconfig. See: https://github.com/tridactyl/tridactyl/issues/1428

" Reload conf on the fly
bind ,s source ~/.config/tridactyl/tridactylrc
" Show help page
bind g? help

" Command prompt
unbind :
bind ,; fillcmdline_notrail
" Allow to copy in the commandline
unbind --mode=ex <C-c>
bind --mode=ex <C-i> ex.next_completion
bind --mode=ex <C-d> ex.prev_completion
bind --mode=ex <C-k> ex.prev_history
bind --mode=ex <C-j> ex.next_history
bind --mode=ex <C-a> text.beginning_of_line
bind --mode=ex <C-e> text.end_of_line
bind --mode=ex <C-h> text.backward_char
bind --mode=ex <C-l> text.forward_char
bind --mode=ex <C-f> text.forward_word
bind --mode=ex <C-b> text.backward_word
bind --mode=ex <C-w> text.backward_kill_word

" Navigation
unbind H
unbind J
unbind K
unbind L

bind h back
bind l forward
" NOTE: `<count>gu` must be declared before `gu` itself
bind 2gu urlparent 3
bind 3gu urlparent 4
bind 4gu urlparent 5
bind gu urlparent
bind gU urlroot

bind H scrollpx -45
bind L scrollpx +45

bind J zoom 0.1 true
bind K zoom -0.1 true

bind { followpage prev
bind } followpage next

bind <C-o> jumpprev
bind <C-i> jumpnext

" bind g; changelistjump -1
" bind g, changelistjump 1

" Tabs
" g0, g$, <M-[0-9] goto first, last, nth
bind [ tabprev
bind ] tabnext
bind << tabmove -1
bind >> tabmove +1
bind gd tabdetach
bind gD composite tabduplicate; tabdetach
bind ,p pin  " Toggle pinned tab
bind d composite tab #; tabclose #

" Search
bind / fillcmdline find
bind ? fillcmdline find -?
bind n findnext --search-from-view
bind N findnext --search-from-view --reverse
bind p findnext --search-from-view --reverse
bind <C-l> nohlsearch
set findcase smart

" Insert/Input mode
" Insert mode is entered by clicking on text areas while input mode is entered by using `gi`
" text functions: https://github.com/tridactyl/tridactyl/blob/master/src/lib/editor.ts
bind --mode=insert <C-i> focusinput -n
bind --mode=insert <C-d> focusinput -N
bind --mode=insert <C-a> text.beginning_of_line
bind --mode=insert <C-e> text.end_of_line
bind --mode=insert <C-h> text.backward_char
bind --mode=insert <C-l> text.forward_char
bind --mode=insert <C-f> text.forward_word
bind --mode=insert <C-b> text.backward_word
bind --mode=insert <C-j> text.next_line
bind --mode=insert <C-k> text.previous_line
bind --mode=insert <C-w> text.backward_kill_word
bind --mode=insert <C-o>gU text.upcase_word
bind --mode=insert <C-o>gu text.downcase_word
bind --mode=insert <C-o>c$ text.kill_line
bind --mode=insert <C-o>c0 text.backward_kill_line
bind --mode=insert <C-o>cc text.kill_whole_line

bind --mode=insert <C-i> focusinput -n
bind --mode=insert <C-d> focusinput -N
bind --mode=input <C-a> text.beginning_of_line
bind --mode=input <C-e> text.end_of_line
bind --mode=input <C-h> text.backward_char
bind --mode=input <C-l> text.forward_char
bind --mode=input <C-f> text.forward_word
bind --mode=input <C-b> text.backward_word
bind --mode=input <C-j> text.next_line
bind --mode=input <C-k> text.previous_line
bind --mode=input <C-w> text.backward_kill_word
bind --mode=input <C-o>gU text.upcase_word
bind --mode=input <C-o>gu text.downcase_word
bind --mode=input <C-o>c$ text.kill_line
bind --mode=input <C-o>c0 text.backward_kill_line
bind --mode=input <C-o>cc text.kill_whole_line

" Visual mode (v)
bind --mode=visual <C-h> js document.getSelection().modify("extend","backward","character")
bind --mode=visual <C-k> js document.getSelection().modify("extend","backward","line")
bind --mode=visual <C-j> js document.getSelection().modify("extend","forward","line")
bind --mode=visual <C-l> js document.getSelection().modify("extend","forward","character")

" Hints
" Open link in foreground tab
bind F hint -t
" Open link in background tab
bind ,f hint -b
" Open link in new window
bind w hint -w
" Yank link to clipboard
bind Y hint -y

" Optimize follow link for URL's.
bindurl duckduckgo.com f hint -Jc [data-testid="result-title-a"]
bindurl duckduckgo.com F hint -Jbc [data-testid="result-title-a"]
bindurl giphy.com f hint -Jci a > img
bindurl youtube.com f hint -Jw
bindurl youtube.com t hint -J

" Focus hidden inputs (gi) on some websites
bindurl ^https://github.com gi hint -Vc .AppHeader-searchButton
bindurl ^http://db.test gi hint -Vc .sqlarea,input

" Open in reader mode
" bind --mode=normal ,q composite hint -pipe a href | jsb -p tri.excmds.tabopen("about:reader?url=" + JS_ARG)

" RSS (show feeds in current page and prompt if more than one found)
alias rsssave js -p tri.excmds.shellescape(JS_ARG).then(url => tri.excmds.exclaim_quiet('echo ' + url + ' >> ~/.config/newsboat/urls; notify-send -i RSS_feeds Newsboat Subscribed'))
set rsscmd rsssave %u
bind ,r composite rssexec
" Subscribe to YouTube channels too
alias ytrss js -p tri.excmds.shellescape(JS_ARG).then(url => tri.excmds.exclaim_quiet('yt-rss ' + url + ' >> ~/.config/newsboat/urls'))
bindurl youtube.com n composite get_current_url | ytrss

" Editor
" Focus an input field, then <C-x>e will start vim instance with content of the
" input (or blank)
set editorcmd term --class floating $EDITOR %f
bind --mode=insert <C-x>e editor
bind --mode=input <C-x>e editor
" Uncomment to trigger editor directly on focus
" bind --mode=normal gi composite focusinput -l | editor

" Git{Hub,Lab} git clone via SSH yank
bind yg composite js "git clone " + document.location.href.replace(/https?:\/\//,"git@").replace("/",":").replace(/$/,".git") | clipboard yank
" }}}

" vim: foldmethod=marker foldlevel=0 foldnestmax=1
