#!/bin/sh

# https://sw.kovidgoyal.net/kitty/remote-control.html
# https://github.com/kovidgoyal/kitty/issues/598

MUSIC_PATH=${MUSIC_PATH:-$HOME/Music}
NOCOVER_PATH="$XDG_CONFIG_HOME/ncmpcpp/vinyl.png"
STREAMING_PATH="$XDG_CONFIG_HOME/ncmpcpp/streaming.png"
COVER_PATH="${XDG_CACHE_HOME:-/tmp}/cover.jpg"

change_cover() {
    kitty @ send-text \
        --match title:cover \
        "clear && kitty +kitten icat --transfer-mode=stream --place 25x25@0x0 $COVER_PATH \r"
}

launch_player() {
    # cover on top
    # kitty @ new-window --new-tab --tab-title music --title cover sh

    # cover on the left side
    kitty @ new-window --tab-title music --title cover sh
    kitty @ send-text 'export PS1="" \r'
    change_cover
    kitty @ new-window --title ncmpcpp ncmpcpp

    # good resize when 1 or 2 terms
    kitty @ resize-window --axis vertical --increment 15
    # kitty @ resize-window --increment 93

    kitty @ close-window --self
}

extract_cover() {
    song_dir=$(dirname "$(mpc --format %file% current)")
    temp_song="/tmp/current-song"

    # Current song is a HTTP stream?
    case "$song_dir" in
        http://*|https://*) cover="$STREAMING_PATH" ;;
    esac

    if [ -z "$cover" ]; then
        # Find the cover if available
        cover=$(find "$MUSIC_PATH/$song_dir" -name "cover.*" | head -n1)
        # Not found? Set default
        [ ! -f "$cover" ] && cover="$NOCOVER_PATH"
    fi

    cp -f "$cover" "$temp_song"

    ffmpeg \
        -hide_banner \
        -loglevel 0 \
        -y \
        -i "$temp_song" \
        -vf scale=400:-1 \
        "$COVER_PATH" >/dev/null 2>&1

    rm -f "$temp_song"
}

get_lyrics() {
    artist=$(mpc --format %artist% current)
    title=$(mpc --format %title% current)
    song=$(curl -s --get "https://makeitpersonal.co/lyrics" --data-urlencode "artist=$artist" --data-urlencode "title=$title")
    echo "$artist - $title\n$song"
}

if [ "$1" = "extract" ]; then
    extract_cover
    # change_cover
elif [ "$1" = "lyrics" ]; then
    get_lyrics
else
    launch_player
fi
