#!/usr/bin/env sh

# XDG official
# https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_DATA_DIRS="/usr/local/share:/usr/share"
export XDG_CONFIG_DIRS="/etc/xdg"
# XDG non-official
export XDG_LOCAL_HOME="$HOME/.local"
[ -f "$XDG_CONFIG_HOME"/user-dirs.dirs ] && \
    eval "$(sed 's/^[^#].*/export &/g;t;d' "$XDG_CONFIG_HOME"/user-dirs.dirs)"

## Runtime
export KITTY_SOCK="$XDG_RUNTIME_DIR"/kitty.sock
export RXVT_SOCKET="$XDG_RUNTIME_DIR"/urxvtd
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR"/ssh-agent.socket
export XAUTHORITY="$XDG_RUNTIME_DIR"/Xauthority
## Config
export BUNDLE_USER_HOME="$XDG_CONFIG_HOME"/bundle
export COMPOSER_HOME="$XDG_CONFIG_HOME"/composer
export GTK2_RC_FILES="$XDG_CONFIG_HOME"/gtk-2.0/gtkrc-2.0
export HTTPIE_CONFIG_DIR="$XDG_CONFIG_HOME"/httpie
export LESSKEY="$XDG_CONFIG_HOME"/less/lesskey
export MEDNAFEN_HOME="$XDG_CONFIG_HOME"/mednafen
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME"/npm/npmrc
export PACKER_CONFIG_DIR="$XDG_CONFIG_HOME"/packer
export RIPGREP_CONFIG_PATH="$XDG_CONFIG_HOME"/ripgrep/rc
export VIMDOTDIR="$XDG_CONFIG_HOME"/vim
export VIMINIT='set rtp^=$VIMDOTDIR | let $MYVIMRC="$VIMDOTDIR/vimrc" | so $MYVIMRC'
export WAKATIME_HOME="$XDG_CONFIG_HOME"/wakatime
export WEECHAT_HOME="$XDG_CONFIG_HOME"/weechat
export WGETRC="$XDG_CONFIG_HOME"/wget/wgetrc
export ZDOTDIR="$XDG_CONFIG_HOME"/zsh
## Cache
export ANSIBLE_CACHE_PLUGINS="$XDG_CACHE_HOME"/ansible/plugins
export ANSIBLE_LOCAL_TEMP="$XDG_CACHE_HOME"/ansible/tmp
export ANSIBLE_SSH_CONTROL_PATH_DIR="$XDG_CACHE_HOME"/ansible/cp
export ANTIGEN_COMPDUMP="$XDG_CACHE_HOME"/zcompdump
export BUNDLE_USER_CACHE="$XDG_CACHE_HOME"/bundle
export COMPOSER_CACHE_DIR="$XDG_CACHE_HOME"/composer
export GEM_SPEC_CACHE="$XDG_CACHE_HOME"/gem
export LESSHISTFILE="$XDG_CACHE_HOME"/less/history
export NOVACLIENT_UUID_CACHE_DIR="$XDG_CACHE_HOME"/novaclient
export PACKER_CACHE_DIR="$XDG_CACHE_HOME"/packer
export RANDFILE="$XDG_CACHE_HOME"/rnd
export YARN_CACHE_FOLDER="$XDG_CACHE_HOME"/yarn
## Data
# export ANSIBLE_ACTION_PLUGINS="$XDG_DATA_HOME"/ansible/plugins/actions
# export ANSIBLE_BECOME_PLUGINS="$XDG_DATA_HOME"/ansible/plugins/become
# export ANSIBLE_CALLBACK_PLUGINS="$XDG_DATA_HOME"/ansible/plugins/callback
# export ANSIBLE_CLICONF_PLUGINS="$XDG_DATA_HOME"/ansible/plugins/cliconf
# export ANSIBLE_COLLECTIONS_PATHS="$XDG_DATA_HOME"/ansible/collections
# export ANSIBLE_CONNECTION_PLUGINS="$XDG_DATA_HOME"/ansible/plugins/connection
# export ANSIBLE_DOC_FRAGMENT_PLUGINS="$XDG_DATA_HOME"/ansible/plugins/doc_fragments
# export ANSIBLE_FILTER_PLUGINS="$XDG_DATA_HOME"/ansible/plugins/filter
# export ANSIBLE_GALAXY_TOKEN_PATH="$XDG_DATA_HOME"/ansible/galaxy_token
# export ANSIBLE_HTTPAPI_PLUGINS="$XDG_DATA_HOME"/ansible/plugins/httpapi
# export ANSIBLE_INVENTORY_PLUGINS="$XDG_DATA_HOME"/ansible/plugins/inventory
# export ANSIBLE_LIBRARY="$XDG_DATA_HOME"/ansible/plugins/modules
# export ANSIBLE_LOOKUP_PLUGINS="$XDG_DATA_HOME"/ansible/plugins/lookup
# export ANSIBLE_MODULE_UTILS="$XDG_DATA_HOME"/ansible/plugins/module_utils
# export ANSIBLE_NETCONF_PLUGINS="$XDG_DATA_HOME"/ansible/plugins/netconf
# export ANSIBLE_ROLES_PATH="$XDG_DATA_HOME"/ansible/roles
# export ANSIBLE_STRATEGY_PLUGINS="$XDG_DATA_HOME"/ansible/plugins/strategy
# export ANSIBLE_TEST_PLUGINS="$XDG_DATA_HOME"/ansible/plugins/test
# export ANSIBLE_VARS_PLUGINS="$XDG_DATA_HOME"/ansible/plugins/vars
export ANYENV_ROOT="$HOME"/.anyenv
export ATOM_HOME="$XDG_DATA_HOME"/atom
export BUNDLE_USER_PLUGIN="$XDG_DATA_HOME"/bundle
export GNUPGHOME="$XDG_DATA_HOME"/gnupg
export HISTFILE="$XDG_DATA_HOME"/zsh/history
export KODI_DATA="$XDG_DATA_HOME"/kodi
export PASSWORD_STORE_DIR="$XDG_DATA_HOME"/pass
export VAGRANT_HOME="$XDG_DATA_HOME"/vagrant
export XCURSOR_PATH=${XCURSOR_PATH}:$XDG_DATA_HOME/icons

# shell history
export HISTSIZE=10000
export SAVEHIST=10000
# grep
export GREP_COLORS="mt=30;43"
# less/bat (keep output when quitting)
export LESS="-Xr"

[ -f "$XDG_LOCAL_HOME"/env.local ] && . "$XDG_LOCAL_HOME"/env.local
