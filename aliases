# Global aliases
alias htop='sudo htop'
alias mkvmp4="bash ~/dotfiles/scripts/utils/mkvmp4.sh"
alias adminer-selfupdate="wget https://www.adminer.org/latest-mysql-en.php -O $DEVELOPMENT_PATH/adminer/adminer.php"
alias h5ai-selfupdate="cd $DEVELOPMENT_PATH/tools/h5ai && git pull && npm install && npm run build && mv build/h5ai-*.zip ../.. && cd $DEVELOPMENT_PATH && rm -rf _h5ai && unzip h5ai-*.zip && rm h5ai-*.zip"
# Watch Arte TV
alias arte="python2 $DEVELOPMENT_PATH/tools/arteVIDEOS/arteVIDEOS.py -d ~/Videos/tv/arte"
# alias phars-selfupdate="fab -f $DEVELOPMENT_PATH/$DEFAULT_USER/fabric/home/fabfile.py update_phars"

# Linux aliases
if [[ `uname` == "Linux" ]]; then
    alias homebackup="luckybackup -c default.profile"
    # if [[ -n $PHPBREW_ROOT ]]; then
    #     alias php5="phpbrew fpm stop && phpbrew use php-5.6.20 && phpbrew fpm start && phpbrew list"
    #     alias php7="phpbrew fpm stop && phpbrew use php-7.0.5 && phpbrew fpm start && phpbrew list"
    # fi

# OSX aliases
elif [[ `uname` == "Darwin" ]]; then
    # Lock the screen (when going AFK)
    alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"
    # Recursively delete `.DS_Store` files
    alias cleanup="find . -type f -name '*.DS_Store' -ls -delete"
    # Hide/show hidden files in Finder
    alias show-hidden="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
    alias hide-hidden="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"
    # Hide/show all desktop icons (useful when presenting)
    alias show-desktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"
    alias hide-desktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
    # Hide/show the iTerm2 Dock icon.
    alias show-iterm2="/usr/libexec/PlistBuddy -c "Delete :LSUIElement" /Applications/iTerm.app/Contents/Info.plist"
    alias hide-iterm2="/usr/libexec/PlistBuddy -c "Add :LSUIElement bool true" /Applications/iTerm.app/Contents/Info.plist"
    # Brew cask upgrade
    alias brewcask-upgrade='for c in `brew cask list`; do ! brew cask info $c | grep -qF "Not installed" || brew cask install $c; done'
fi