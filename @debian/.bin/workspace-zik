#!/usr/bin/env sh

# Load i3 layout on specific workspace for ncmpcpp player with visualiser and cover art in separate windows
# Dependencies: jq, kitty, sxiv, compton
# https://github.com/ameba23/ncmpcpp_i3_screen_layout
# https://sainathadapa.github.io/2016/03/29/i3-empty-workspace-workaround.html
# https://sw.kovidgoyal.net/kitty/remote-control.html

COVER_PATH="${XDG_CACHE_HOME:-/tmp}/cover.jpg"
LAYOUT_PATH="${XDG_CONFIG_HOME:-$HOME/.config}/i3/layouts/zik.json"
WKNAME=5

goto_workspace() {
    i3-msg "workspace $WKNAME" >/dev/null
    sleep .5
    i3-msg '[instance="^zik_ncmpcpp$"] focus' >/dev/null
}
create_workspace() {
    # create workspace and append layout
    i3-msg "workspace $WKNAME; append_layout $LAYOUT_PATH" >/dev/null
    # music visualizer
    kitty --name zik_cava cava &
    # music player
    kitty --name zik_ncmpcpp ncmpcpp &
    # cover
    # ncmpcpp-art extract
    # feh -^ zik_cover -B black -g 256x256+832+600 -Z -x --reload 5 $COVER_PATH &
    sxiv -b -N zik_cover -s f "$COVER_PATH" &

    # Extra 1: Custom window background opacity
    # Add the following opacity rule to compton config:
    # opacity-rule = [
    #     "80:class_i ~= '^zik_*'",
    # ]

    # Extra 2: Custom window border
    # Add the following rule to i3 config:
    # for_window [instance="zik"] border pixel 5
}

# workspace exists?
if i3-msg -t get_workspaces | jq ".[] | .name" | grep -q -w $WKNAME; then
    goto_workspace
else
    create_workspace
    goto_workspace
fi

exit 0
