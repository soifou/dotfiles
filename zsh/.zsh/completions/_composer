#compdef composer

_composer()
{
    local state com cur

    cur=${words[${#words[@]}]}

    # lookup for command
    for word in ${words[@]:1}; do
        if [[ $word != -* ]]; then
            com=$word
            break
        fi
    done

    if [[ ${cur} == --* ]]; then
        state="option"
        opts=("--help:Display this help message" "--quiet:Do not output any message" "--verbose:Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug" "--version:Display this application version" "--ansi:Force ANSI output" "--no-ansi:Disable ANSI output" "--no-interaction:Do not ask any interactive question" "--profile:Display timing and memory usage information" "--no-plugins:Whether to disable plugins." "--working-dir:If specified, use the given directory as working directory.")
    elif [[ $cur == $com ]]; then
        state="command"
        coms=("about:Shows the short information about Composer." "archive:Creates an archive of this composer package." "browse:Opens the package\'s repository URL or homepage in your browser." "check-platform-reqs:Check that platform requirements are satisfied." "clear-cache:Clears composer\'s internal package cache." "config:Sets config options." "create-project:Creates new project from a package into given directory." "depends:Shows which packages cause the given package to be installed." "diagnose:Diagnoses the system to identify common errors." "dump-autoload:Dumps the autoloader." "exec:Executes a vendored binary/script." "global:Allows running commands in the global composer dir \(\$COMPOSER_HOME\)." "help:Displays help for a command" "init:Creates a basic composer.json file in current directory." "install:Installs the project dependencies from the composer.lock file if present, or falls back on the composer.json." "licenses:Shows information about licenses of dependencies." "list:Lists commands" "outdated:Shows a list of installed packages that have updates available, including their latest version." "prohibits:Shows which packages prevent the given package from being installed." "remove:Removes a package from the require or require-dev." "require:Adds required packages to your composer.json and installs them." "run-script:Runs the scripts defined in composer.json." "search:Searches for packages." "self-update:Updates composer.phar to the latest version." "show:Shows information about packages." "status:Shows a list of locally modified packages." "suggests:Shows package suggestions." "update:Upgrades your dependencies to the latest version according to composer.json, and updates the composer.lock file." "validate:Validates a composer.json and composer.lock.")
    fi

    case $state in
        command)
            _describe 'command' coms
        ;;
        option)
            case "$com" in

            about)
            opts+=()
            ;;

            archive)
            opts+=("--format:Format of the resulting archive: tar or zip" "--dir:Write the archive to this directory" "--file:Write the archive with the given file name. Note that the format will be appended." "--ignore-filters:Ignore filters when saving package")
            ;;

            browse)
            opts+=("--homepage:Open the homepage instead of the repository URL." "--show:Only show the homepage or repository URL.")
            ;;

            check-platform-reqs)
            opts+=()
            ;;

            clear-cache)
            opts+=()
            ;;

            config)
            opts+=("--global:Apply command to the global config file" "--editor:Open editor" "--auth:Affect auth config file \(only used for --editor\)" "--unset:Unset the given setting-key" "--list:List configuration settings" "--file:If you want to choose a different composer.json or config.json" "--absolute:Returns absolute paths when fetching \*-dir config values instead of relative")
            ;;

            create-project)
            opts+=("--stability:Minimum-stability allowed \(unless a version is specified\)." "--prefer-source:Forces installation from package sources when possible, including VCS information." "--prefer-dist:Forces installation from package dist even for dev versions." "--repository:Pick a different repository \(as url or json config\) to look for the package." "--repository-url:DEPRECATED: Use --repository instead." "--dev:Enables installation of require-dev packages \(enabled by default, only present for BC\)." "--no-dev:Disables installation of require-dev packages." "--no-custom-installers:DEPRECATED: Use no-plugins instead." "--no-scripts:Whether to prevent execution of all defined scripts in the root package." "--no-progress:Do not output download progress." "--no-secure-http:Disable the secure-http config option temporarily while installing the root package. Use at your own risk. Using this flag is a bad idea." "--keep-vcs:Whether to prevent deleting the vcs folder." "--remove-vcs:Whether to force deletion of the vcs folder without prompting." "--no-install:Whether to skip installation of the package dependencies." "--ignore-platform-reqs:Ignore platform requirements \(php \& ext- packages\).")
            ;;

            depends)
            opts+=("--recursive:Recursively resolves up to the root package" "--tree:Prints the results as a nested tree")
            ;;

            diagnose)
            opts+=()
            ;;

            dump-autoload)
            opts+=("--no-scripts:Skips the execution of all scripts defined in composer.json file." "--optimize:Optimizes PSR0 and PSR4 packages to be loaded with classmaps too, good for production." "--classmap-authoritative:Autoload classes from the classmap only. Implicitly enables \`--optimize\`." "--apcu:Use APCu to cache found/not-found classes." "--no-dev:Disables autoload-dev rules.")
            ;;

            exec)
            opts+=("--list")
            ;;

            global)
            opts+=()
            ;;

            help)
            opts+=("--xml:To output help as XML" "--format:The output format \(txt, xml, json, or md\)" "--raw:To output raw command help")
            ;;

            init)
            opts+=("--name:Name of the package" "--description:Description of package" "--author:Author name of package" "--type:Type of package \(e.g. library, project, metapackage, composer-plugin\)" "--homepage:Homepage of package" "--require:Package to require with a version constraint, e.g. foo/bar:1.0.0 or foo/bar=1.0.0 or "foo/bar 1.0.0"" "--require-dev:Package to require for development with a version constraint, e.g. foo/bar:1.0.0 or foo/bar=1.0.0 or "foo/bar 1.0.0"" "--stability:Minimum stability \(empty or one of: stable, RC, beta, alpha, dev\)" "--license:License of package" "--repository:Add custom repositories, either by URL or using JSON arrays")
            ;;

            install)
            opts+=("--prefer-source:Forces installation from package sources when possible, including VCS information." "--prefer-dist:Forces installation from package dist even for dev versions." "--dry-run:Outputs the operations but will not execute anything \(implicitly enables --verbose\)." "--dev:Enables installation of require-dev packages \(enabled by default, only present for BC\)." "--no-dev:Disables installation of require-dev packages." "--no-custom-installers:DEPRECATED: Use no-plugins instead." "--no-autoloader:Skips autoloader generation" "--no-scripts:Skips the execution of all scripts defined in composer.json file." "--no-progress:Do not output download progress." "--no-suggest:Do not show package suggestions." "--optimize-autoloader:Optimize autoloader during autoloader dump" "--classmap-authoritative:Autoload classes from the classmap only. Implicitly enables \`--optimize-autoloader\`." "--apcu-autoloader:Use APCu to cache found/not-found classes." "--ignore-platform-reqs:Ignore platform requirements \(php \& ext- packages\).")
            ;;

            licenses)
            opts+=("--format:Format of the output: text or json" "--no-dev:Disables search in require-dev packages.")
            ;;

            list)
            opts+=("--xml:To output list as XML" "--raw:To output raw command list" "--format:The output format \(txt, xml, json, or md\)")
            ;;

            outdated)
            opts+=("--outdated:Show only packages that are outdated \(this is the default, but present here for compat with \`show\`" "--all:Show all installed packages with their latest versions" "--direct:Shows only packages that are directly required by the root package" "--strict:Return a non-zero exit code when there are outdated packages" "--minor-only:Show only packages that have minor SemVer-compatible updates. Use with the --outdated option." "--format:Format of the output: text or json")
            ;;

            prohibits)
            opts+=("--recursive:Recursively resolves up to the root package" "--tree:Prints the results as a nested tree")
            ;;

            remove)
            opts+=("--dev:Removes a package from the require-dev section." "--no-progress:Do not output download progress." "--no-update:Disables the automatic update of the dependencies." "--no-scripts:Skips the execution of all scripts defined in composer.json file." "--update-no-dev:Run the dependency update with the --no-dev option." "--update-with-dependencies:Allows inherited dependencies to be updated with explicit dependencies. \(Deprecrated, is now default behavior\)" "--no-update-with-dependencies:Does not allow inherited dependencies to be updated with explicit dependencies." "--ignore-platform-reqs:Ignore platform requirements \(php \& ext- packages\)." "--optimize-autoloader:Optimize autoloader during autoloader dump" "--classmap-authoritative:Autoload classes from the classmap only. Implicitly enables \`--optimize-autoloader\`." "--apcu-autoloader:Use APCu to cache found/not-found classes.")
            ;;

            require)
            opts+=("--dev:Add requirement to require-dev." "--prefer-source:Forces installation from package sources when possible, including VCS information." "--prefer-dist:Forces installation from package dist even for dev versions." "--no-progress:Do not output download progress." "--no-suggest:Do not show package suggestions." "--no-update:Disables the automatic update of the dependencies." "--no-scripts:Skips the execution of all scripts defined in composer.json file." "--update-no-dev:Run the dependency update with the --no-dev option." "--update-with-dependencies:Allows inherited dependencies to be updated, except those that are root requirements." "--update-with-all-dependencies:Allows all inherited dependencies to be updated, including those that are root requirements." "--ignore-platform-reqs:Ignore platform requirements \(php \& ext- packages\)." "--prefer-stable:Prefer stable versions of dependencies." "--prefer-lowest:Prefer lowest versions of dependencies." "--sort-packages:Sorts packages when adding/updating a new dependency" "--optimize-autoloader:Optimize autoloader during autoloader dump" "--classmap-authoritative:Autoload classes from the classmap only. Implicitly enables \`--optimize-autoloader\`." "--apcu-autoloader:Use APCu to cache found/not-found classes.")
            ;;

            run-script)
            opts+=("--timeout:Sets script timeout in seconds, or 0 for never." "--dev:Sets the dev mode." "--no-dev:Disables the dev mode." "--list:List scripts.")
            ;;

            search)
            opts+=("--only-name:Search only in name" "--type:Search for a specific package type")
            ;;

            self-update)
            opts+=("--rollback:Revert to an older installation of composer" "--clean-backups:Delete old backups during an update. This makes the current version of composer the only backup available after the update" "--no-progress:Do not output download progress." "--update-keys:Prompt user for a key update" "--stable:Force an update to the stable channel" "--preview:Force an update to the preview channel" "--snapshot:Force an update to the snapshot channel" "--set-channel-only:Only store the channel as the default one and then exit")
            ;;

            show)
            opts+=("--all:List all packages" "--installed:List installed packages only \(enabled by default, only present for BC\)." "--platform:List platform packages only" "--available:List available packages only" "--self:Show the root package information" "--name-only:List package names only" "--path:Show package paths" "--tree:List the dependencies as a tree" "--latest:Show the latest version" "--outdated:Show the latest version but only for packages that are outdated" "--minor-only:Show only packages that have minor SemVer-compatible updates. Use with the --outdated option." "--direct:Shows only packages that are directly required by the root package" "--strict:Return a non-zero exit code when there are outdated packages" "--format:Format of the output: text or json")
            ;;

            status)
            opts+=()
            ;;

            suggests)
            opts+=("--by-package:Groups output by suggesting package" "--by-suggestion:Groups output by suggested package" "--no-dev:Exclude suggestions from require-dev packages")
            ;;

            update)
            opts+=("--prefer-source:Forces installation from package sources when possible, including VCS information." "--prefer-dist:Forces installation from package dist even for dev versions." "--dry-run:Outputs the operations but will not execute anything \(implicitly enables --verbose\)." "--dev:Enables installation of require-dev packages \(enabled by default, only present for BC\)." "--no-dev:Disables installation of require-dev packages." "--lock:Only updates the lock file hash to suppress warning about the lock file being out of date." "--no-custom-installers:DEPRECATED: Use no-plugins instead." "--no-autoloader:Skips autoloader generation" "--no-scripts:Skips the execution of all scripts defined in composer.json file." "--no-progress:Do not output download progress." "--no-suggest:Do not show package suggestions." "--with-dependencies:Add also dependencies of whitelisted packages to the whitelist, except those defined in root package." "--with-all-dependencies:Add also all dependencies of whitelisted packages to the whitelist, including those defined in root package." "--optimize-autoloader:Optimize autoloader during autoloader dump." "--classmap-authoritative:Autoload classes from the classmap only. Implicitly enables \`--optimize-autoloader\`." "--apcu-autoloader:Use APCu to cache found/not-found classes." "--ignore-platform-reqs:Ignore platform requirements \(php \& ext- packages\)." "--prefer-stable:Prefer stable versions of dependencies." "--prefer-lowest:Prefer lowest versions of dependencies." "--interactive:Interactive interface with autocompletion to select the packages to update." "--root-reqs:Restricts the update to your first degree dependencies.")
            ;;

            validate)
            opts+=("--no-check-all:Do not make a complete validation" "--no-check-lock:Do not check if lock file is up to date" "--no-check-publish:Do not check for publish errors" "--with-dependencies:Also validate the composer.json of all installed dependencies" "--strict:Return a non-zero exit code for warnings as well as errors")
            ;;

            esac

            _describe 'option' opts
        ;;
        *)
            # fallback to file completion
            _arguments '*:file:_files'
    esac
}

compdef _composer composer
